// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// 座席テーブル
model M_SEAT {
  seatId      String  @id           // 例: "A1"
  tableId     String               // 例: "A"
  seatNumber  Int                  // 例: 1
  status      Int                  // 1:流動 2:固定 3:不使用 4:予約
  imageX      Int
  imageY      Int

   seatPositions T_SEAT_POSITION[] @relation("SeatToSeatPosition")
}

// 座席抽選結果
model T_SEAT_POSITION {
  id            Int      @id @default(autoincrement())
  date          DateTime
  seatId        String
  userId        Int
  created       DateTime
  updated       DateTime?

  seat          M_SEAT   @relation("SeatToSeatPosition", fields: [seatId], references: [seatId])
  user          M_USER   @relation("UserToSeatPosition", fields: [userId], references: [userId])

  @@unique([date, userId])
}


// ユーザー情報
model M_USER {
  userId         Int     @id @default(autoincrement())
  employeeNumber String  @unique
  lastName       String
  firstName      String
  showName       String?
  password       String
  adminFlag      Boolean
  deleteFlag     Boolean

  seatPositions T_SEAT_POSITION[] @relation("UserToSeatPosition")
}


// // 会議テーブル
// model Table {
//   Tableid Int    @id @default(autoincrement())
//   name    String
// }
// // 隣接テーブル情報
// model AdjacentTable {
//   AdjacentTableId Int @id @default(autoincrement())
//   tableId         Int
//   adjacentTableId Int
// }
// // 過去の座席抽選結果
// model T_PAST_POSITION {
//   id            Int      @id @default(autoincrement())
//   Date          DateTime
//   seatId        Int
//   userId        Int
//   created       DateTime
//   updated       DateTime
// }